{"version":3,"sources":["Login.tsx","pages/NotiTray.tsx","App.tsx","index.tsx"],"names":["Login","onSubmit","data","className","e","preventDefault","values","Object","fromEntries","FormData","target","id","network","region","type","defaultValue","name","required","NotiTray","useState","useEffect","onLanding","AmityUserTokenManager","createAuthToken","ApiRegion","SG","userId","displayName","accessToken","axios","get","headers","Authorization","res","console","log","MainApp","useSearchParams","searchParams","authToken","undefined","apiRegion","apiKey","path","element","App","rootElement","document","getElementById","createRoot","render"],"mappings":"iOAAe,SAASA,EAAT,GAEX,IAAD,IADDC,gBACC,MADU,SAACC,GAA4D,EACvE,EAWD,OACE,uBAAMC,UAAU,QAAQF,SAXL,SAACG,GACpBA,EAAEC,iBACF,IAAMC,EAASC,OAAOC,YAAY,IAAIC,SAASL,EAAEM,SACjDT,EAAS,CACPU,GAAIL,EAAOK,GACXC,QAASN,EAAOM,QAChBC,OAAQP,EAAOO,QAElB,EAGC,UACE,4CAEE,iDAEF,2CACA,uBAAOC,KAAK,OAAOC,aAAc,KAAMC,KAAK,SAASC,UAAQ,IAC7D,4CACA,uBAAOH,KAAK,OAAOE,KAAK,UAAUC,UAAQ,IAC1C,uCACA,uBAAOH,KAAK,OAAOE,KAAK,KAAKC,UAAQ,IACrC,wBAAQH,KAAK,SAAb,qBAGL,C,6CClBYI,EAAe,WAC1B,MAA0BC,mBAAS,IAAnC,6BAoBA,OAnBAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,kHACcC,wBAAsBC,gBAClD,GACAC,YAAUC,GACV,CAAEC,OAAQ,OAAQC,YAAa,SAJjB,qBACRC,EADQ,EACRA,aADQ,gCAOIC,IAAMC,IACtB,oDACA,CACEC,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAV1B,OAORK,EAPQ,OAadC,QAAQC,IAAIF,EAAI/B,MAbF,2CAAH,qDAgBfmB,GACD,GAAE,IACI,+CACR,ECpBKe,EAAU,WAAO,IAAD,EACpB,EAAuBC,cAAhBC,EAAP,oBACM1B,EAAU0B,EAAaR,IAAI,WAC3BJ,EAASY,EAAaR,IAAI,UAC1BjB,EAASyB,EAAaR,IAAI,UAC1BS,EAAS,UAAGD,EAAaR,IAAI,oBAApB,aAAoCU,EACnD,OACE,cAAC,qBAAD,CACEC,UAAW5B,EACX6B,OAAQ9B,EACRc,OAAQA,EACRa,UAAWA,EAJb,SAME,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,KAAK,OAAOC,QAAS,cAAC,iBAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,mBAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,UAIvC,EAEc,SAASC,IACtB,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwC,KAAK,SAASC,QAAS,cAAC5C,EAAD,MAC9B,cAAC,IAAD,CAAO2C,KAAK,KAAKC,QAAS,cAAC,EAAD,YAKnC,CCxCD,IAAME,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GACnBI,OACH,cAAC,aAAD,UACE,cAACL,EAAD,M","file":"static/js/main.924ddda8.chunk.js","sourcesContent":["export default function Login({\n  onSubmit = (data: { id: string; network: string; region: string }) => {},\n}) {\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const values = Object.fromEntries(new FormData(e.target));\n    onSubmit({\n      id: values.id as string,\n      network: values.network as string,\n      region: values.region as string,\n    });\n  };\n\n  return (\n    <form className=\"Login\" onSubmit={handleSubmit}>\n      <h1>\n        Welcome to\n        <strong>ASC DEMO</strong>\n      </h1>\n      <label>region</label>\n      <input type=\"text\" defaultValue={\"EU\"} name=\"region\" required />\n      <label>network</label>\n      <input type=\"text\" name=\"network\" required />\n      <label>id</label>\n      <input type=\"text\" name=\"id\" required />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState, FC } from \"react\";\n// @ts-ignore\n\nimport {\n  AmityUserTokenManager,\n  ApiRegion,\n  // @ts-ignore\n} from \"@amityco/js-sdk\";\n\nexport const NotiTray: FC = () => {\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    const onLanding = async () => {\n      const { accessToken } = await AmityUserTokenManager.createAuthToken(\n        \"\",\n        ApiRegion.SG,\n        { userId: \"test\", displayName: \"test\" }\n      );\n      if (accessToken) {\n        const res = await axios.get(\n          \"https://beta.amity.services/notifications/history\",\n          {\n            headers: { Authorization: `Bearer ${accessToken}` },\n          }\n        );\n        console.log(res.data);\n      }\n    };\n    onLanding();\n  }, []);\n  return <div>notifications</div>;\n};\n","import \"./styles.css\";\nimport { HashRouter, Route, Routes, useSearchParams } from \"react-router-dom\";\nimport {\n  AmityUiKitProvider,\n  AmityUiKitSocial,\n  AmityUiKitChat,\n  // @ts-ignore\n} from \"@amityco/ui-kit\";\n\nimport Login from \"./Login\";\nimport { NotiTray } from \"./pages/NotiTray\";\n\nconst MainApp = () => {\n  const [searchParams] = useSearchParams();\n  const network = searchParams.get(\"network\");\n  const userId = searchParams.get(\"userId\");\n  const region = searchParams.get(\"region\");\n  const authToken = searchParams.get(\"authToken\") ?? undefined;\n  return (\n    <AmityUiKitProvider\n      apiRegion={region}\n      apiKey={network}\n      userId={userId}\n      authToken={authToken}\n    >\n      <Routes>\n        <Route path=\"chat\" element={<AmityUiKitChat />} />\n        <Route path=\"social\" element={<AmityUiKitSocial />} />\n        <Route path=\"notitray\" element={<NotiTray />} />\n      </Routes>\n    </AmityUiKitProvider>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/*\" element={<MainApp />} />\n        </Routes>\n      </HashRouter>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement!);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}