{"version":3,"sources":["Login.tsx","pages/NotiTray.tsx","App.tsx","index.tsx"],"names":["Login","onSubmit","data","className","e","preventDefault","values","Object","fromEntries","FormData","target","id","network","region","type","defaultValue","name","required","NotiTray","useState","sdk","useAmitySDK","accessToken","connected","useEffect","console","log","initState","params","window","location","href","split","urlParams","URLSearchParams","page","get","authToken","undefined","App","state","setState","renderpage","useMemo","apiRegion","apiKey","userId","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2NAAe,SAASA,EAAT,GAEX,IAAD,IADDC,gBACC,MADU,SAACC,GAA4D,EACvE,EAWD,OACE,uBAAMC,UAAU,QAAQF,SAXL,SAACG,GACpBA,EAAEC,iBACF,IAAMC,EAASC,OAAOC,YAAY,IAAIC,SAASL,EAAEM,SACjDT,EAAS,CACPU,GAAIL,EAAOK,GACXC,QAASN,EAAOM,QAChBC,OAAQP,EAAOO,QAElB,EAGC,UACE,4CAEE,iDAEF,2CACA,uBAAOC,KAAK,OAAOC,aAAc,KAAMC,KAAK,SAASC,UAAQ,IAC7D,4CACA,uBAAOH,KAAK,OAAOE,KAAK,UAAUC,UAAQ,IAC1C,uCACA,uBAAOH,KAAK,OAAOE,KAAK,KAAKC,UAAQ,IACrC,wBAAQH,KAAK,SAAb,qBAGL,C,+BCvBYI,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBACMC,GADN,UACYC,yBACJC,EAA2BF,EAA3BE,YAAaC,EAAcH,EAAdG,UAiBrB,OAhBAC,qBAAU,WAERC,QAAQC,IAAI,YAAYN,EAazB,GAAE,CAACE,EAAaC,IACV,+CACR,ECZKI,EAAY,WAAO,IAAD,UAEhBC,EADMC,OAAOC,SAASC,KACTC,MAAM,KAAK,GACxBC,EAAY,IAAIC,gBAAgBN,GAChCO,EAAI,UAAGF,EAAUG,IAAI,eAAjB,QAA4B,SAKtC,MAAO,CAAEzB,GAJD,UAAGsB,EAAUG,IAAI,aAAjB,QAA0B,GAIrBvB,OAHD,UAAGoB,EAAUG,IAAI,iBAAjB,QAA8B,GAGrBxB,QAFR,UAAGqB,EAAUG,IAAI,kBAAjB,QAA+B,GAEdC,UADf,UAAGJ,EAAUG,IAAI,oBAAjB,aAAiCE,EACPH,OAC1C,EAEc,SAASI,IACtB,MAA0BpB,mBAMvBQ,GANH,mBAAOa,EAAP,KAAcC,EAAd,KAQMC,EAAaC,mBAAQ,WACzB,IAAID,EAAa,cAAC,mBAAD,IAGjB,MAFmB,SAAfF,EAAML,OAAiBO,EAAa,cAAC,iBAAD,KACrB,aAAfF,EAAML,OAAqBO,EAAa,cAAC,EAAD,KACrCA,CACR,GAAE,CAACF,EAAML,OAEV,OACE,qBAAKhC,UAAU,MAAf,SACIqC,EAAM7B,GAGN,cAAC,qBAAD,CACEiC,UAAWJ,EAAM3B,OACjBgC,OAAQL,EAAM5B,QACdkC,OAAQN,EAAM7B,GACd0B,UAAWG,EAAMH,UAJnB,SAMGK,IARH,cAAC1C,EAAD,CAAOC,SAAUwC,KAaxB,CCrDD,IAAMM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACZ,EAAD,MAEFQ,E","file":"static/js/main.63d36c60.chunk.js","sourcesContent":["export default function Login({\n  onSubmit = (data: { id: string; network: string; region: string }) => {},\n}) {\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const values = Object.fromEntries(new FormData(e.target));\n    onSubmit({\n      id: values.id as string,\n      network: values.network as string,\n      region: values.region as string,\n    });\n  };\n\n  return (\n    <form className=\"Login\" onSubmit={handleSubmit}>\n      <h1>\n        Welcome to\n        <strong>ASC DEMO</strong>\n      </h1>\n      <label>region</label>\n      <input type=\"text\" defaultValue={\"EU\"} name=\"region\" required />\n      <label>network</label>\n      <input type=\"text\" name=\"network\" required />\n      <label>id</label>\n      <input type=\"text\" name=\"id\" required />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState, VFC } from \"react\";\n// @ts-ignore\nimport { useAmitySDK } from \"@amityco/ui-kit-open-source\";\n\nexport const NotiTray: VFC = () => {\n  const [state, setState] = useState([]);\n  const sdk = useAmitySDK();\n  const { accessToken, connected } = sdk;\n  useEffect(() => {\n    // no accessToken from sdk\n    console.log(\"onLanding\",sdk);\n    const onLanding = async () => {\n      if (accessToken) {\n        const res = await axios.get(\n          \"https://beta.amity.services/notifications/history\",\n          {\n            headers: { Authorization: `Bearer ${accessToken}` },\n          }\n        );\n        console.log(res.data);\n      }\n    };\n   // onLanding();\n  }, [accessToken, connected]);\n  return <div>notifications</div>;\n};\n","import \"./styles.css\";\nimport { useMemo, useState } from \"react\";\n\nimport {\n  AmityUiKitProvider,\n  AmityUiKitSocial,\n  AmityUiKitChat,\n  // @ts-ignore\n  // } from \"@amityco/ui-kit-open-source\";\n} from \"@amityco/ui-kit\";\n\nimport Login from \"./Login\";\nimport { NotiTray } from \"./pages/NotiTray\";\n\nconst initState = () => {\n  const url = window.location.href;\n  const params = url.split(\"?\")[1];\n  const urlParams = new URLSearchParams(params);\n  const page = urlParams.get(\"page\") ?? \"social\";\n  const id = urlParams.get(\"id\") ?? \"\";\n  const region = urlParams.get(\"region\") ?? \"\";\n  const network = urlParams.get(\"network\") ?? \"\";\n  const authToken = urlParams.get(\"authToken\") ?? undefined;\n  return { id, region, network, authToken, page };\n};\n\nexport default function App() {\n  const [state, setState] = useState<{\n    id: string;\n    network: string;\n    region: string;\n    authToken?: string;\n    page?: string;\n  }>(initState);\n\n  const renderpage = useMemo(() => {\n    let renderpage = <AmityUiKitSocial />;\n    if (state.page === \"chat\") renderpage = <AmityUiKitChat />;\n    if (state.page === \"notitray\") renderpage = <NotiTray />;\n    return renderpage;\n  }, [state.page]);\n\n  return (\n    <div className=\"App\">\n      {!state.id ? (\n        <Login onSubmit={setState} />\n      ) : (\n        <AmityUiKitProvider\n          apiRegion={state.region}\n          apiKey={state.network}\n          userId={state.id}\n          authToken={state.authToken}\n        >\n          {renderpage}\n        </AmityUiKitProvider>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}